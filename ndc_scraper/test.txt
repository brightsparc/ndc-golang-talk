__label__mobile	building mobile apps is hard work getting code shared across the different platforms is even harder honestly i m lazy and i don t want to repeat myself so i do whatever i can to only write code once and have it work everywhere  if you re like me and want to optimize your time and be more efficient building mobile apps join this session where we ll explore some good and bad practices to get code shared across different mobile platforms when using c 
__label__dotnet	dotnet standard is one of many new technologies to emerge from the mass of open source dotnet initiatives during the past year compared to what s come before dotnet standard is not only a more effective way to use nuget packages cross platform it s also way simpler  it has the potential to remove most if not all of the current confusion surrounding cross platform multi targeting so what is exactly is it and how does it work how does it relate to dotnet core join adam as he answers these questions and more and takes a dive into some of the magic which makes dotnet standard work 
__label__javascript __label__web	angular is a next generation javascript platform for building mobile web and desktop applications  in this workshop we will build a crm application with angular using components services dependency injection forms angular modules and lazy loaded routes we will then cover unit tests and using the redux pattern with the ngrx library by the end of this workshop you will have built a working angular applications you can extend into an enterprise application you will also walk away with the source code and the course material so join us to learn to build great enterprise applications with angular day 1 day 2 you need to bring your own laptop with the below software installed to follow this workshop if you get stuck we can help you on the day but it helps to have this already installed we have made a for if you issues with the install 
__label__security __label__web __label__testing	a number of security vulnerabilities in a website and app used by thousands of norwegian parents has left their kids privacy and security in jeopardy  i will show how i found these flaws just by using a web proxy and the devastating effect of combining several of these security mistakes together the talk will follow the story of how i progressed from checking the security of the application to discover vulnerabilities in authorization authentication xss csrf cookies tokens and third party components i will show how simple parameter manipulation and some basic html and javascript is enough to own all users of the system with everything exposed what are the direct real world consequences of poor application security my goal is to show how anyone can do a security test in an ethical way using a web proxy and how to do a responsible disclosure effectively 
__label__design __label__ux __label__people	user experience is included at every level of business this can be seen in the culture of a company through the content products and services that the employees create the company engages with its consumers  user experience is integrated into every touchpoint of a company s infrastructure when people engage with a brand learn why it s important to have a generalist on the team to oversee the user experience for a company at every level of its processes including hiring design development advertising and marketing 
__label__microsoft __label__cloud __label__database	big data is the new big thing where storing the data is the easy part gaining insights in your pile of data is something different based on a data dump of the well known stackexchange websites we will store analyse 150 gb of data with azure data lake store analytics to gain some insights about their users  after that we will use power bi to give an at a glance overview of our learnings if you are a developer that is interested in big data this is your time to shine we will use our existing sql c skills to analyse everything without having to worry about running clusters 
__label__microsoft __label__dotnet	visual studio 2017 contains many new and exciting features new c 7 language features and ide productivity enhancements to support web and cloud development windows app development cross platform mobile development and more  the latest version of visual studio provides cutting edge tools and technologies to create apps that take advantage of the latest platform capabilities whether windows android ios or linux it s fastest leanest version of visual studio ever vs code is visual studio 2017 s little brother it s lightweight it s free it runs on windows mac and linux and it s a little rambunctious vs code aims to provide just the tools a developer needs for a quick code build debug cycle and leaves more complex workflows to its big brother being lighter doesn t mean it s not better most of the serious angular 2 devs at ssw already choose vs code as their weapon of choice watch as adam cogan gives you a tour of these great ides and expands your development horizons this session is guaranteed to make you even more productive and highlight why the visual studio family is awesome for developing software 
__label__security __label__iot __label__architecture	get a chance to get hand on experience with the sensors of the future explore your inner creativity and having fun while doing so this session allow you to innovate and find new ways to use disruptive technologies sensor solution to solve real world problems  it includes learning about the conceptual components of the solution as well as hardware specifications and the apis through building real life applications participants get the necessary theoretical and practical experience enabling them to integrate the sensors to virtually any scenario 
__label__soft_skills __label__craftsmanship __label__design __label__ux __label__web __label__people __label__fun	the world health organization states that one billion people live with disabilities and estimates put internet usage with a screen reader as high as 3 4 of all internet traffic around the world web accessibility can help  so what is web accessibility and who needs it is engineering accessibility enough how do you build an cross functional accessibility culture and what can you do to prevent accessibility regressions i had all the same questions and only four months to guarantee all our consumer user flows were accessible well what happened come learn what it takes to lead a web accessibility movement within your company 
__label__devops __label__cloud	many born in the cloud organizations started and continue with production only deployments this works fine in the early stages but leads to complications later when a more robust set of processes must be put in place  in this session you ll learn how to transform your born in the cloud azure environment to one which has a proper development and production environment how to ensure that your workloads are backed up and recoverable and how to ensure that permissions and roles are configured so that coworkers have the rights that they need rather than everyone sharing a single administrative account 
__label__cross_platform __label__javascript __label__web __label__functional_programming	let s acknowledge it javascript has conquered the world you ve it on the web on the server on the desktop on mobile everywhere like the language or not the truth is js developers have built an incredible ecosystem with libraries and tools to do almost anything if you want to enjoy all these development opportunities does it mean there s no choice but dealing with duck typing cryptic equality rules and undefined everywhere  no fable is an open source compiler that brings all the power of f to the js world the functional paradigm static typing with type inference pattern matching type providers and more together with a comprehensive library to handle collections text and observables among others fable doesn t add any runtime overhead and generates clean js code in conformance with new es6 patterns like modules or iterables making it compatible with modern development tools including github electron or react native to let you develop not only web but also cross platform desktop and mobile apps 
__label__web __label__architecture	client side web technologies continue to advance at breakneck speed the quest to deliver richer user experiences is relentless and due to the limitations of http 1 x we have been forced to develop various workarounds domain sharding spriting resource concatenation and inlining in a bid to optimize performance  http 2 has been designed with the modern web in mind and eliminates the need for such compensating hacks in this session we ll take an in depth look at web performance optimization the best practices that have evolved the game changing new features of http 2 and most importantly what you need to do to deliver a world class http 2 experience why domain sharding resource concatenation and image sprites are now anti patterns how server push is effectively resource inlining on steroids what new best practices are possible with http 2 what techniques to apply during the transitional period from http 1 x to http 2 additionally we will look at the tooling available for working with http 2 traffic and how we can ensure that we re getting the full benefit of http 2 both client and server side 
__label__soft_skills	have you ever thought about how many amazing things we get in this day and age for free think about it whether it s articles in daily newspapers social media your code repository your continuous integration server as a service  and that s not even mentioning all the amazing open source libraries frameworks that are all out there it s all free and it s awesomesauce but isn t there always a but in reality someone is paying for all this sometimes it s being paid for with cash other times in the form of data and in many cases in the form of liabilities many of us choose to ignore this and gaze at the wonder of it all one day however we ll wake up and ask where our free lunch has gone and surprised that things start crumbling down 
__label__iot __label__cloud	using a trusty raspberry pi and a bunch of sensors this session will take the attendees on an end to end journey using windows 10 iot core and the the iot stack in microsoft azure  the solution will build out a scenario from sensors all the way through to visualisation and insight and provide attendees with a real experience in the world of the internet of things the internet of things is experiencing huge growth and the session will provide a walkthrough of the key areas that constitute a solution providing attendees with a good starting point from which to build their own solutions 
__label__javascript __label__architecture	treating behaviors first class entities is a staple of functional programming as the command pattern it is a staple of oop as well  in this talk we will take a look at this classic pattern and then we ll see how it can be applied to modern problems like concurrency serializability and separation of concerns 
__label__microsoft __label__fun	from modern art to asset management and everything in between the object recognition market is poised to be worth billions of dollars in coming years  in this presentation stephen will introduce you to developing object recognition for hololens using the vuforia augmented reality sdk 
__label__web __label__architecture __label__cloud	it seemed like an easy feature to implement a checkout page to place an order but this payment gateway has a simple api so we added that and this email service provider makes it possible to send an email with one line of code finally we can notify downstream systems via a message queue the code looks simple 6 little lines of distributed systems code  but those lines hid a dark secret that we only found after launching customers complained they didn t get their email the back end system wasn t getting updated from our messages and by far the worst of all customers complained they saw an error page but still got charged clearly it wasn t as easy as calling a few apis and shipping we actually need to worry about those other systems in this session we ll look at taking our 6 lines of distributed systems fail examining the inevitable failures that arise and possible mitigating scenarios we ll also look at the coupling our code contains and the ways we can address it finally we ll refactor towards a truly resilient checkout process that embraces instead of ignoring the fallacies of distributed computing 
__label__microsoft __label__web __label__dotnet	the majority of web projects in dotnet are written with aspdotnet mvc core and entityframework with sql server this seems odd to me there are some fantastic alternatives that seem to be scarcely used  everyone knows there is no such thing as a silver bullet so let s check out some alternatives exploring some common problems we ll take a look at nancyfx dapper and postgres to help us solve them we ll be looking at these frameworks with a slightly twisted take on the blub paradox how did i realise i was essentially a blub programmer why did i decide to look into postgres and how i can use javascript effectively with it what use is currying in f and what difference does it makes to me let s step out of our comfort zones and let s start looking up 
__label__security __label__web __label__fun	how do dormant cyber pathogens spread do hackers really wear hoodies while they hack and how hard is to become a genuine bona fide evil cyber hacker anyway  these and many more burning cyber security questions will be tackled in a non stop action packed look at the state of online security in this talk you ll see you ll see just how bad the state of security is today how easy it is to find risks the extent of vulnerable code that s out there and just how ill equipped organisations are to handle it when everything goes wrong it s a real world look at the industry that will entertain horrify and compel us all to do more in protecting our valuable online assets discover how to improve your own systems by learning from those that have failed to do so in the past 
__label__machine_learning __label__functional_programming	machine learning and functional programming are both very hot topics these days they are also both rather intimidating for the beginner in this workshop we ll take a 100 hands on approach and learn practical ideas from machine learning by tackling real world problems and implementing solutions in f in a functional style in the process you will see that once you get beyond the jargon f and machine learning are actually not all that complicated and fit beautifully together so if you are curious about what machine learning is about and want to sharpen your developer skills come with your laptop and let s hack together   attendees will need a laptop with an ide or editor running f check for instructions on how to get setup 
__label__security __label__devops __label__agile	agile development is a powerful tool for the creation of high quality software products it has however scared the life out of many security managers and risk leaders once the job of a dedicated security team security is now the responsibility of all members of our agile teams  so how do we bring continuous security to our lifecycles without compromising velocity and innovation what tools and techniques do we need and when should we apply them in this talk we will examine why security is the new key skills for successful agile development teams and what you can do to bring it to your teams this is a talk of war stories from the scrum team trenches and real world tools techniques and processes that are less about managing security than they are about building amazing secure things fast 
__label__craftsmanship __label__dotnet	there are dotnet libraries that are complex to setup hard to understand difficult to debug and impossible to extend and then there are dotnet libraries for the same task that wonderfully just work why do some libraries succeed where others fail  in this session we will discuss what makes a well designed api from high level design principles like the pit of success the wall of complexity and the power of sameness to applying those concepts in low level dotnet class design with the goal of creating dotnet libraries that developers love to use 
__label__architecture __label__cloud	microsoft azure is huge in this session i ll show you how to use some of the platform as a service service in azure to design and create a modern aspdotnet core application that will be used globally  amongst other things i ll show you how to route global traffic with azure traffic manager and how to use azure redis cache to speed up the application i ll also show you how to script the environment so that we can deploy it consistently to all of your environments using visual studio team services and i ll show you how to secure the application with azure app service authentication we ll go through a lot stuff that will show you that azure helps to take care of the plumbing and boring stuff so that you can build things that matter 
__label__functional_programming	in this talk i ll show a real world example of running f on azure functions by consuming several apis in a deployment pipeline we have created a service that generates informative changelogs between environments i want to show you how easily you can do the same  using the power of f type providers we ll create a new project integrate with three external systems and deploy to azure functions in under an hour we ll go all the way from the drawing board to running in production be prepared for some live coding the presentation does not assume any prior familiarity with f type providers or azure functions 
__label__cpp	legacy code is the bane of most developers even so in cpp where you can find code that was created more than a decade ago  when a developer needs to add a feature or fix a bug in such codebase he s faced with a problem how to add code to a mess without creating a bigger mess as well as additional bugs on the way in this talk i show what worked for me when working with large undocumented piles of cpp code the practices and patterns that i use and how to transform unmaintainable code into code that can be extended and improved 
__label__cpp	traditionally diagnosing complex issues in cpp applications has been a dark craft involving complex high overhead tools that you absolutely can t apply in a production environment but things have changed there are great tools and techniques available for both linux and windows to debug diagnose and profile cpp applications  in this talk we will investigate multiple scenarios on both operating systems high cpu load blocked threads heavy i o memory leaks initialization issues and more we will use freely available lightweight production ready tools that do not require application restart and can be easily deployed alongside your cpp application on linux we will use the versatile perf multi tool the venerable ftrace and the bleeding edge bpf kernel technology on windows we will use etw event tracing for windows and the windows performance toolkit we will also talk about debugging symbols debuginfo or pdbs required for getting effective call stacks and demangling method names to something more or less readable 
__label__ux	when we discover often late in a project or even after a launch that what we built isn t accessible to people with disabilities we can feel both frustrated and defeated as professionals working on the web we re champions for the user but with accessibility we aren t even sure how to start as designers and developers how can we account for everyone s needs when there are so many competing priorities what do we know about users with disabilities and how they interact with our content how can we incorporate inclusive practices into what we build without negatively impacting our designs and how can we possibly make this scalable with agile teams  in this interactive workshop created for anyone who participates in the ux and development process elle waters guides attendees on how to consider accessibility at each stage of a project and within each role learn how to start with inclusive design principles and how to build those principles and techniques into the process elle provides easy to adopt techniques for designers developers and testers learn core principles that you can start putting into practice tomorrow a basic understanding of html css javascript and web design principles anyone who s involved in the design and or development of web pages a laptop with ability to download and install firefox add ons chrome extensions and ideally a codepen io account 
__label__functional_programming	you might know that the lambda calculus is the theoretical foundation for all functional programming languages but what is it really and how does it work   in this talk we ll bring the theory to life using f and the fparsec library we will write a working lambda calculus interpreter from scratch we ll even have time left to demonstrate how we can use it to do something useful like adding numbers 
__label__languages __label__cloud __label__fun __label__database	 data gives us insights into how people build software and the activities of open source communities on github represent one of the richest datasets ever created of people working together at scale github universe 2016 we are going to analyze live on stage 5 years of github metadata and 42 tb code stored in it to answer questions like how is this run how coding patterns have changed through time guiding your project design decisions based on actual usage of your apis how to request features based on data the most effective phrasing to request changes effects of social media on a project s popularity who starred your project and what other projects interest them measuring community health running static code analysis at scale tabs or spaces 
__label__debugging __label__devops __label__javascript	node runs on a powerful javascript engine but that same engine can complicate things when it comes to obtaining accurate information on your application s performance  there are plenty of tools for profiling cpp or java applications but understanding javascript interactions with native code can be extremely challenging in this talk we will discuss profiling options for node js including perf_events dtrace the v8 s engine built in prof switch and tools based on the bleeding edge kernel bpf technology we will also talk about turning profiler results into flame graphs an innovative visualization tool for understanding stack sample reports and for figuring out the time split across the javascript and native parts of your application 
__label__machine_learning __label__dotnet __label__cloud	with high performance virtual machines vm and networking blazing fast vm provisioning per minute billing and rich set of services google cloud is a great platform to deploy and run your traditional aspdotnet core applications  in this session we will cover this is your opportunity to learn about what google cloud offers for your aspdotnet app 
__label__cross_platform	git has some 157 commands each with several arguments that can take a number of possible values this complex matrix of seemingly infinite combinations unquestionably gives the impression of git being an incredibly hard to use source control management system that only linus torvalds and his closest friends are capable of truly understanding and using efficiently  however this is not the case in its simplest form git is just a file system and if you think of a file system like a graph or the other way around git is just a set of commands that lets you manipulate this graph so while the complex command matrix is indeed well complex the basics of git is not this workshop will make you understand the core of git and how the command matrix is basically just fluff very powerful and useful fluff but fluff nonetheless what git does is basically introductory high school graph theory in its simplest form if you understand nodes or points and edges or lines and are able to point your index finger at a node you should hopefully leave this talk a bit more informed and perhaps hate git an ounce less than you did before the talk after teaching the core of git the workshop will go on to show how you can use git flow gitversion and github in concert to become a much more efficient structured and overall better developer please bring your own laptop with the following installed 
__label__functional_programming	servant is a haskell library that implements a domain specific language for web apis at the type level by specifying the api as types you get a clean separation of http logic and the value level handlers also since the type checker has knowledge about the various endpoints and where they live it will be able to verify that all handlers return the correct types and headers and that internal uris are correct  implementing a server i e a set of handlers for the http endpoints is just one of several uses of an api type however by traversing the type servant is also able to derive a swagger openapi specification for the api and even api client code in javascript and other languages we will look at how servant achieves a clean separation of http and business logic true to the core philosophy of http and rest by not just implementing a server for an api but also deriving a javascript client and a swagger openapi specification for the we will end up with an api with strong correctness guarantees and also documentation and client code that is guaranteed to be correct and up to date 
__label__serverless __label__continuous_delivery __label__microservices __label__cloud	in this session we will look at how we rewrote an application written using some classic asp some aspdotnet webforms and vbdotnet with multiple databases in multiple sql server instances and zero tests to aws using serverless technologies aws lambda kinesis elastic etc  we will look at the challenges we faced our journey from 6 monthly releases to continuous delivery monolith to functions tips and tricks failures and learnings from data driven to domain driven the talk will be supported with live demos with tips on setting up a continuous deployment pipeline and how to monitor such applications in production 
__label__languages __label__mobile	now in its third year swift apple s new programming language is already at version 3 has undergone significant development and has now been fully open sourced it s had one of the fastest adoptions of any new language ever for reasons we ll discuss and has been turning the world of apple development on its head  but what s different about it how does it fit in with other modern languages is it a functional language as some rumours have suggested does it have any unique features should you care about it at all if you are not in the apple eco system or even if you are we ll look at answers to at all these questions and get a flavour of the language itself 
__label__security	social engineering is one of the biggest threats to our organisations as attackers use manipulation techniques to coerce people into revealing secrets about our companies to allow attackers to gain access to critical systems  in this talk we will look at some of the techniques used in social engineering and look at how to guard yourself against them we will cover subjects like pre texting elicitation and body language as techniques for manipulating people 
__label__javascript __label__web	react v16 brings with it a very exciting update known as react fibre fibre is a re implementation of reacts core which brings with it a heap of performance improvements an official renderer api and fixes many long standing issues without changing the public api of react  in this session we will briefly cover how react works it s basic concepts what makes up react s core and the features that fibre will open up like error boundaries returning multiple components from render building custom renderers and more after this session you will have a solid understanding of the fundamental patterns that react is built on so you can take advantage of the more advanced fibre features like time slicing when it s released 
__label__serverless __label__database	with so many people using nyc s bike share program i wanted to see if i could spot any trends in usage but how did i go from observing bikers on the street to creating visualizations of popular routes based on different biker demographics  enter google s managed big data analytics warehouse tool bigquery using bigquery i ran queries on 33 million bike trips and integrated my findings with a few visualization tools i ll explain my process do some live queries and show you how to do the same analysis with your own data 
__label__serverless __label__microsoft __label__cloud	in this session i will look how developers can leverage the microsoft azure paas services to compose publish and expose their apis to their target audience be it internal external or a mix  i will look at azure api management azure api apps azure logic apps and azure functions as components that developer can leverage in their api strategies 
__label__soft_skills __label__people	is empathy a mystical power a few select people have or a practical learnable life skill in this talk pavneet will share how his journey towards empathy has helped with burnout imposter syndrome parenting and self care  
__label__database	on a given project data scientists can spend upwards of 80 of their time preparing cleaning and correcting data   in this session we will look at different data cleansing and preparation techniques using both sql server and r we will investigate the concept of tidy data and see how we can use tools in both languages to simplify research and analysis of a small but realistic data set 
__label__tools __label__cross_platform __label__languages __label__fun	no we are not talking about paper notebooks or moleskines or any of that hipster stuff we are talking about like jupyter and ipython notebooks for years they have been in use by data scientists and data engineers but i haven t seen them permeate into the developer community yet why  if you want to take a page from the data scientist s note book come along to my talk and learn about how you can use notebooks to speed up your learning do some spike and prototyping or have a new tool in your toolbelt in this talk i will share a developer s perspective of this amazing tool for almost everything no knowledge of astronomy required 
__label__cross_platform __label__dotnet	at microsoft we have first hand experience writing bots and building artificial intelligence systems so we ve shared our services and tools so you can use them to add conversations to your own products  in this session we will take a deep dive into microsoft s conversations as a platform and look in microsoft bot framework cognitive services and other azure services to graduate your app from small talk into truly insightful conversations 
__label__continuous_delivery __label__devops __label__architecture	have you ever heard the phrase we tried buzzword and it didn t work for us it used to be agile but now devops is the new process buzzword and we can expect to hear about devops failures more and more frequently when the heavily hyped process starts failing or slowing you down it s tempting to throw it away and go back to the way things were but the problems can be easy to find and fix if you know where to look  this session is all about why devops works when it works why it fails when it fails and how to analyse your devops process and pipeline to make it as efficient and effective as possible first i ll introduce some guiding principles for a good devops pipeline that are important for self evaluation and repair then we ll look at where the buildup of sewage often occurs for organisations new to devops and of course how to clean things up before they get too smelly if you re sceptical of the new buzzword or are frustrated by your current process this talk is for you 
__label__cpp	features always come with costs either of performance or code footprint with cpp11 and its successors we got some exciting new features  as the spirit of cpp is you pay only for what you use it is vital for developers to know what the costs are this talk presents the cost of features like lambdas or the all time static the focus is on modern cpp at the end attendee are able to rate features moreprecisely whether to use them in a project or not 
__label__agile	using agile methodologies like scrum or xp has become common place in a lot of organizations but what do you do when you want to scale your business or department in size just being agile in it self won t stop growth of your business and teams descending into chaos in this talk we will look at different techniques and team dynamics changes you can make to allow you to scale agile across your business  in this talk we will take a look at the spotify model that has been gaining in popularity recently and discuss how this works for consumer facing products and how you can adapt it to work in more regulated business to business enterprises i will give examples of where i have started to apply this model to a start up working with regulated insurance companies that is currently going through a hyper growth stage 
__label__design __label__ux __label__web __label__ui __label__mobile	designing web apps is now more challenging than ever with their potential ability to behave like native apps pwas have a more intimate user experience they re more responsive and much more powerful  in this talk you will learn the characteristics of pwas from a design perspective and guidelines for designing great pwas we will cover topics like app shell touch guidelines responsiveness offline experiences more 
__label__ux __label__javascript __label__web __label__mobile	the web is becoming more and more powerful everyday especially with the launch of progressive web apps pwas are experiences that combine the best of the web and the best of apps you can now build web apps that run from your home screen receive push notifications work offline  we will start by introducing progressive web apps by explaining what are the main concepts behind it such as web app manifest service worker we will cover in depth how we can write service worker code to control the network and create resilient experiences after introducing pwas we will explore relevant best practices last but not least we will explore some modern web apis that will make building pwas a much more robust experience 
__label__functional_programming	writing and programming are often seen as different writing a creative profession programming a technical one below the surface however there is one large similarity both writing and programming are ultimately the translation of a high level idea into low level sentences or statements  so there should be something we can learn from each other right in this talk felienne will compare the activities of writing and programming with a focus on learning to read and write versus learning to program 
__label__continuous_delivery __label__iot __label__fun __label__testing	i recently made build lights for the company i work for and my home office they integrate with teamcity and indicate when a build is running and success failure of all the tests  in this session we will reverse engineer a bluetooth light bulb s protocol learn how to have an intel edison communicate with the bulb and by the end you too will know how to make your own build lights please note that this talk will be highly technical we will be discussing low level details of bluetooth communication protocol analysis with wireshark sniffing bluetooth packets etc 
__label__cpp __label__embedded __label__security __label__web	the linux security and isolation apis have become the basis of some of the most useful features server side providing the isolation required for efficient containers  however these apis also form the basis of the chromium sandbox on linux and we will study them in that context this is the sandbox used in the vivaldi brave chrome and opera browsers among others the chromium sandbox has a very platform specific implementation using the platform apis available to construct it in this talk we will describe the requirements of the chromium sandbox in detail and go through how the linux implementation fulfills these requirements 
__label__languages __label__functional_programming	have you ever peeked over the fence into functional programming land and gazed into a seemingly alien landscape of weird symbols and crazily named concepts has your curiosity about functional programming been stymied by complicated words and abstractions if so this talk is for you  we re going to take a practical example based journey through complex sounding but deceptively simple functional patterns such as functors applicatives and the big bad monad we ll see how these patterns work what they re for and how they are used to make clean composable code we ll also identify the places where functional patterns are quietly being used in our mainstream day to day languages by the end of the talk you will be better equipped to take further steps down the functional programming path of enlightenment 
__label__devops __label__architecture __label__cloud	terraform is a tool for defining creating and changing versioned infrastructure in a safe and efficient way the tool lets you define infrastructure using a simple json like syntax and services from different cloud providers both public and private can be combined to create advanced setups  showcasing most of the standard features found i terraform i ll create a rather complex infrastructure in azure and combine it with resources found with other cloud providers expect lots of live demos 
__label__continuous_delivery __label__microservices __label__agile	feature flags are a valuable devops technique to deliver better more reliable software faster feature flags can be used for both release management dark launches canary rollouts betas as well as long term control entitlement management user segmentation personalization  however if not managed properly feature flags can be very destructive technical debt feature flags need to be managed properly with visibility and control to both engineering and business users 
__label__design __label__ux __label__web __label__ui	are you willing to go the extra mile to make your ux shiny and joyful most of us web developers underestimate the importance of the human computer interaction join this talk for developer friendly ux patterns that you can start using in your everyday code  in this talk nicole will talk about the best practices that developers should consider when building a product from a ux point of view and jad will explain the technical perspective behind it we will cover topics like performance mobile optimization smooth transitions offline experiences more 
__label__ux __label__devops __label__web __label__architecture	there are two big problems that make visitors leave a website slow loading times and irrelevant content failure to address those fast can impact a business negatively ten years ago amazon discovered during a b tests that every if anything people have become much more impatient since then however websites are now so complex that it is often hard to pinpoint which part of the web architecture or interactions with it are causing performance issues the same is true for quickly finding out which content turns users off or on as with so many questions nowadays the answer is data or more specifically real time website traffic data and there s a perfect place to collect this data in real time varnish cache  varnish monitors and logs all traffic flowing through websites with almost no latency so website owners can gather a host of information as it happens but how to explore this data the easiest way is to use varnish custom statistics vcs a real time statistics engine that allows users to aggregate display and analyse web traffic vcs can count everything page popularity click count trending content articles or sale products where traffic is coming from urls with long load times urls with most hits urls with the most 50x response code errors which clients are generating load etc vcs outputs data via a time series api in json format which can easily be integrated into existing monitoring solutions norwegian møller group is a good example of how using vcs s json output data in combination with a monitoring tool can create real business value before using vcs the company experienced load problems in its main database but did not know where the usage was coming from on the api side often the cause of load they couldn t visualise the data traffic by integrating vcs with datadog møller group got deep insight into their performance problems and was able to pinpoint the cause of poor response times the level and distribution of errors and to act quickly and resolve the problems in his practical session hugo cruz product manager at varnish software will talk about how to use vcs to gather web data in real time and deliver better website user experience that makes visitors stay he will introduce delegates to vcs how to use itfor identifying performance issues and for more advanced use cases such as a b testing tracking conversion rates measuring click through rates and counting users per video stream 
__label__devops	is your work ever boring programming is exciting and challenging when we re adding features and making the computer do stuff like serious business work programming is boring when we re getting yet another service up and running and configured in ci adding the same methods to matching classes again creating an issue linking the pr waiting for the build then there are the tasks so tedious we deny their importance and skip them like upgrading existing services to the latest coding standards and keeping library versions up to date everywhere what if you could replace every boring task with a few lines of carefully considered code  in this session you ll see a live demo of how i can automate coordination and code with rug and atomist i can t get you out of boring meetings but i can help you stick to the serious business in your coding time 
__label__cpp	creating a high performance cpp application is a multi level problem not just about applying a set of low level tweaks  this talk covers a range of design issues such as the key role of domain knowledge the choice of data structures and algorithms memory allocation modern machines and caches the use of move semantics and various approaches to string handling all this and some measurement too wow 
__label__microsoft __label__web __label__dotnet	aspdotnet core has a new major version  in this talk you ll learn about major new features like razor pages and dotnet standard 2 0 as well as about the smaller but no less useful changes and improvements across the stack 
__label__javascript __label__web	typescript is quickly becoming the dominant way to write maintainable self documenting javascript  this session will demonstrate some of the reasons why you should consider adding typescript to your javascript toolset this will be followed by a tour of the new features that can help catch javascript bugs before they make their way to production since typescript is fast evolving just like javascript we will also cover how to keep up with the changes 
__label__architecture __label__dotnet	actor model is one of those old new things that has recently been adopted by projects with high performance and scalability requirements thanks to akka framework available on both jvm and dotnet platforms with great appraisals come certain concerns criticizing actors for low level detail management and lack of composability akka team tried to address some of them in a module called akka streams that lets developers define their process workflows at a higher level even drawing it as a graph and use akka system as a process materializer that will create and connect underlying actors behind the scenes and let messages flow in streams according to the workflow definition  this talk presents an example of a process workflow implemented using traditional actors and then demonstrates how to replace a set of manually defined actors with a workflow definitions based on akka streams we will show how to integrate in streams message queues and web services and how to define process workflows in c f and even scala 
__label__microsoft __label__dotnet	come and hear some tales from the trenches on building highly scalable services with dotnet powering various bing services the good the bad and the ugly  in this talk we ll focus on best practices to build high performance code to instrument the code for deep analysis and how to use various tools to help achieve your performance goals and drive down costs 
